# Generated by Django 4.1 on 2022-10-23 09:39

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import extensions.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('phone', models.CharField(max_length=10, unique=True, validators=[extensions.utils.phone_validator], verbose_name='phone')),
                ('user_level', models.CharField(choices=[('normal', 'normal'), ('admin', 'admin'), ('super_user', 'super_user')], default='normal', max_length=10, verbose_name='user level')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active_email', models.BooleanField(default=False)),
                ('is_operator', models.BooleanField(default=False)),
                ('active_email_code', models.CharField(blank=True, editable=False, max_length=32, null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date_joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='BlockedPhone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=12, unique=True, validators=[django.core.validators.RegexValidator(message='شماره ی تلفن نامعتبر است.', regex='^9\\d{2}\\s*?\\d{3}\\s*?\\d{4}$')], verbose_name='phone')),
            ],
            options={
                'verbose_name': 'Blocked Phone',
                'verbose_name_plural': 'Blocked Phones',
            },
        ),
        migrations.CreateModel(
            name='Industry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, max_length=200, null=True, verbose_name='type of company')),
            ],
            options={
                'verbose_name': 'Industry',
                'verbose_name_plural': 'Industries',
            },
        ),
        migrations.CreateModel(
            name='WorkExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, editable=False, max_length=10, null=True, verbose_name='Slug Field')),
                ('job', models.CharField(blank=True, max_length=100, null=True, verbose_name='Job')),
                ('company', models.CharField(blank=True, max_length=150, null=True, verbose_name='Company')),
                ('user', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Work Experience',
                'verbose_name_plural': 'Work Experiences',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, editable=False, max_length=10, null=True, verbose_name='Slug Field')),
                ('first_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=150, null=True, verbose_name='Last Name')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, validators=[django.core.validators.RegexValidator(message='The email is Invalid.', regex='([A-Za-z0-9]+[.-_])*[A-Za-z0-9]+@[A-Za-z0-9-]+(\\.[A-Z|a-z]{2,})+')], verbose_name='Email')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='')),
                ('user', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profiles',
            },
        ),
        migrations.CreateModel(
            name='PersonalInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, editable=False, max_length=10, null=True, verbose_name='Slug Field')),
                ('location', models.CharField(blank=True, max_length=30, null=True, verbose_name='Location')),
                ('address', models.TextField(blank=True, max_length=500, null=True, verbose_name='Address')),
                ('is_married', models.BooleanField(default=False, verbose_name='Is Married ?')),
                ('gender', models.CharField(blank=True, choices=[('Female', 'F'), ('Male', 'M')], max_length=6, null=True, verbose_name='Gender')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date Of Birth')),
                ('military_service_status', models.CharField(blank=True, choices=[('end of service', 'the end of service'), ('permanent exemption', 'permanent exemption'), ('education pardon', 'education pardon'), ('doing', 'doing'), ('included', 'included')], max_length=100, null=True, verbose_name='Military Service Status')),
                ('user', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Personal Information',
                'verbose_name_plural': 'Personal Informations',
            },
        ),
        migrations.CreateModel(
            name='EducationalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, editable=False, max_length=10, null=True, verbose_name='Slug Field')),
                ('major', models.CharField(blank=True, max_length=30, null=True, verbose_name='Major')),
                ('university', models.CharField(blank=True, max_length=100, null=True, verbose_name='University')),
                ('grade', models.CharField(blank=True, choices=[('diploma', 'Diploma'), ('associate', 'Associate'), ('master', 'MA'), ('master of science', 'MS'), ('doctorate', 'Dr')], max_length=30, null=True, verbose_name='Grade')),
                ('user', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Educational Record',
                'verbose_name_plural': 'Educational Records',
            },
        ),
        migrations.CreateModel(
            name='CompanyProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='email')),
                ('name', models.CharField(blank=True, max_length=120, null=True, verbose_name='name')),
                ('english_name', models.CharField(blank=True, max_length=120, null=True, verbose_name='english name')),
                ('website_addr', models.CharField(blank=True, max_length=120, null=True, verbose_name='website address')),
                ('telephone', models.CharField(max_length=10)),
                ('city', models.CharField(blank=True, max_length=100, null=True, verbose_name='city')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='', verbose_name='logo')),
                ('company_description', models.TextField(blank=True, max_length=400, null=True, verbose_name='company description')),
                ('company_view', models.ImageField(blank=True, null=True, upload_to='', verbose_name='company view')),
                ('established_year', models.PositiveIntegerField(blank=True, null=True, verbose_name='established year')),
                ('type_of_ownership', models.CharField(blank=True, choices=[('Private', 'Private'), ('Government', 'Government'), ('Other', 'Non-profit/Charity')], max_length=10, null=True, verbose_name='type of ownership')),
                ('create_at', models.DateTimeField(auto_now_add=True, verbose_name='create at')),
                ('number_of_advertisements', models.PositiveIntegerField(default=0, verbose_name='number of advertisements')),
                ('industry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.industry', verbose_name='industry')),
                ('organizational_interface', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='organizational interface')),
            ],
            options={
                'verbose_name': 'Company Profile',
                'verbose_name_plural': 'Companies Profile',
            },
        ),
        migrations.CreateModel(
            name='AboutMe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(blank=True, editable=False, max_length=10, null=True, verbose_name='Slug Field')),
                ('about_me', models.TextField(blank=True, max_length=500, null=True, verbose_name='About Me')),
                ('user', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'About Me',
                'verbose_name_plural': 'About Me',
            },
        ),
    ]
